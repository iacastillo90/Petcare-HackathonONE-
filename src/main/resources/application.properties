spring.application.name=Petcare

# Configuración de la conexión a la base de datos MySQL (con placeholders)
#spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/petcare # Utiliza las variables de entorno para la configuración
spring.datasource.url=jdbc:mysql://localhost:3306/petcare
spring.datasource.username=${spring.datasource.username}
spring.datasource.password=${spring.datasource.password}

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Configuración de Hibernate y JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Configuración de la conexión SMTP (con placeholders)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${spring.mail.username}
spring.mail.password=${spring.mail.password}

spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.debug=true

# Configuración de HikariCP
spring.datasource.hikari.maximum-pool-size=20

# Número mínimo de conexiones que se mantendrán en el pool,
# incluso si están inactivas. Este valor debe ser ajustado
# para balancear la latencia y el uso de recursos.
spring.datasource.hikari.minimum-idle=5

# Tiempo máximo (en milisegundos) que una conexión puede estar inactiva
# en el pool antes de ser eliminada. Un valor más bajo puede liberar recursos,
# pero puede aumentar la latencia para nuevas conexiones.
spring.datasource.hikari.idle-timeout=60000

# Tiempo máximo (en milisegundos) que una solicitud de conexión
# puede estar esperando en la cola antes de lanzar una excepción.
# Este valor debe ser ajustado según la latencia aceptable para la aplicación.
spring.datasource.hikari.connection-timeout=30000

# Tiempo máximo de vida (en milisegundos) de una conexión en el pool.
# Después de este tiempo, la conexión será eliminada y reemplazada
# por una nueva. Esto ayuda a mitigar problemas de conexión a largo plazo.
spring.datasource.hikari.max-lifetime=1800000

# Configuración del servidor
server.address=0.0.0.0
server.port=8088
server.forward-headers-strategy=native

# Configuración JWT (con placeholders)
jwt.secret=${jwt.secret}
jwt.expiration=86400000

# Configuración de logging
debug=true
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.com.podstream=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=TRACE
logging.level.org.springframework.data=DEBUG
logging.level.org.hibernate.orm.jdbc.bind=TRACE

# Configuración de Swagger
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui
springdoc.swagger-ui.url=/api-docs

# Activar el perfil "local" para desarrollo
spring.profiles.active=local